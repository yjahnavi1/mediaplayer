server.port = 8081
spring.jpa.database=postgresql
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.data.jpa.repositories.bootstrap-mode=default


#controlles how simulink handles the initialization values for conditionally executed subsystems
spring.sql.init.mode=always
#spring.sql.init.data-locations=
#classpath:guardSchema.sql,classpath:guardData.sql,classpath:domesticHelpData.sql,classpath:domesticHelpSchema.sql,classpath:vdata.sql,classpath:vschema.sql


#PostgreSQL properties

spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://localhost:5432/hr
spring.datasource.username=postgres
spring.datasource.password=janu

###spring.application.name = login-app
###server.servlet.context-path=/login-app/api




# http://localhost:8083/h2
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2
# Datasource
#spring.datasource.url=jdbc:h2:file:~/ProductDB
#spring.datasource.username=sa
#spring.datasource.password=
#spring.datasource.driver-class-name=org.h2.Driver

###spring.jackson.serialization.fail-on-empty-beans=false

spring.mvc.pathmatch.matching-strategy=ant-path-matcher
spring.main.allow-circular-references=true
# App Properties
##Its not a good practice to keep a plain secret key this must be encrypted
##jwt.secret=my$ecretKey
#npm install -g @angular/cli 
#npm install
#ng serve


###management.endpoints.web.exposure.exclude=*
###management.info.env.enabled=true

info.app.name=Login App
info.app.description=Mediaplayer Case Study
info.app.version=1.0.0


