server.port=8090



spring.datasource.url= jdbc:postgresql://localhost:5432/hr
spring.datasource.username= postgres
spring.datasource.password= janu

#swagger2  Configuration
spring.mvc.pathmatch.matching-strategy=ant-path-matcher


spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

spring.jpa.hibernate.ddl-auto =create

spring.jackson.serialization.fail-on-empty-beans=false

#########video related
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.servlet.multipart.enabled=true
##############

#spring.application.name = login-app
#server.servlet.context-path=/login-app/api
#
#
## http://localhost:8083/h2
##spring.h2.console.enabled=true
##spring.h2.console.path=/h2
## Datasource
##spring.datasource.url=jdbc:h2:file:~/ProductDB
##spring.datasource.username=sa
##spring.datasource.password=
##spring.datasource.driver-class-name=org.h2.Driver
#
#spring.jackson.serialization.fail-on-empty-beans=false
#
#spring.mvc.pathmatch.matching-strategy=ant-path-matcher
#spring.main.allow-circular-references=true
## App Properties
###Its not a good practice to keep a plain secret key this must be encrypted
##jwt.secret=my$ecretKey
##npm install -g @angular/cli 
##npm install
##ng serve
#
#management.endpoints.web.exposure.include=*
#management.info.env.enabled=true
#
#info.app.name=Login App
#info.app.description=Microservices Case Study
#info.app.version=1.0.0

